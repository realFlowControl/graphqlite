"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9108],{1834:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var a=n(7462),i=(n(7294),n(3905)),o=(n(1839),n(5488)),r=n(5162);const s={id:"doctrine-annotations-attributes",title:"Doctrine annotations VS PHP8 attributes",sidebar_label:"Annotations VS Attributes"},l=void 0,p={unversionedId:"doctrine-annotations-attributes",id:"version-4.2/doctrine-annotations-attributes",title:"Doctrine annotations VS PHP8 attributes",description:"GraphQLite is heavily relying on the concept of annotations (also called attributes in PHP 8+).",source:"@site/versioned_docs/version-4.2/doctrine-annotations-attributes.mdx",sourceDirName:".",slug:"/doctrine-annotations-attributes",permalink:"/docs/4.2/doctrine-annotations-attributes",draft:!1,editUrl:"https://github.com/thecodingmachine/graphqlite/edit/master/website/versioned_docs/version-4.2/doctrine-annotations-attributes.mdx",tags:[],version:"4.2",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1661778885,formattedLastUpdatedAt:"8/29/2022",frontMatter:{id:"doctrine-annotations-attributes",title:"Doctrine annotations VS PHP8 attributes",sidebar_label:"Annotations VS Attributes"},sidebar:"version-4.2/docs",previous:{title:"Migrating",permalink:"/docs/4.2/migrating"},next:{title:"Annotations reference",permalink:"/docs/4.2/annotations-reference"}},u={},d=[{value:"Doctrine annotations",id:"doctrine-annotations",level:2},{value:"PHP 8 attributes",id:"php-8-attributes",level:2}],c={toc:d};function h(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"GraphQLite is heavily relying on the concept of annotations (also called attributes in PHP 8+)."),(0,i.kt)("h2",{id:"doctrine-annotations"},"Doctrine annotations"),(0,i.kt)("div",{class:"alert alert--warning"},(0,i.kt)("strong",null,"Deprecated!")," Doctrine annotations are deprecated in favor of native PHP 8 attributes. Support will be dropped in a future release."),(0,i.kt)("p",null,'Historically, attributes were not available in PHP and PHP developers had to "trick" PHP to get annotation support.  This was the purpose of the ',(0,i.kt)("a",{parentName:"p",href:"https://www.doctrine-project.org/projects/doctrine-annotations/en/latest/index.html"},"doctrine/annotation")," library."),(0,i.kt)("p",null,"Using Doctrine annotations, you write annotations in your docblocks:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\GraphQLite\\Annotations\\Type;\n\n/**\n * @Type\n */\nclass MyType\n{\n}\n")),(0,i.kt)("p",null,"Please note that:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The annotation is added in a ",(0,i.kt)("strong",{parentName:"li"},"docblock"),' (a comment starting with "',(0,i.kt)("inlineCode",{parentName:"li"},"/**"),'")'),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"Type")," part is actually a class. It must be declared in the ",(0,i.kt)("inlineCode",{parentName:"li"},"use")," statements at the top of your file.")),(0,i.kt)("div",{class:"alert alert--info"},(0,i.kt)("strong",null,"Heads up!"),(0,i.kt)("p",null,"Some IDEs provide support for Doctrine annotations:"),(0,i.kt)("ul",null,(0,i.kt)("li",null,"PhpStorm via the ",(0,i.kt)("a",{href:"https://plugins.jetbrains.com/plugin/7320-php-annotations"},"PHP Annotations Plugin")),(0,i.kt)("li",null,"Eclipse via the ",(0,i.kt)("a",{href:"https://marketplace.eclipse.org/content/symfony-plugin"},"Symfony 2 Plugin")),(0,i.kt)("li",null,"Netbeans has native support")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"We strongly recommend using an IDE that has Doctrine annotations support.\n"))),(0,i.kt)("h2",{id:"php-8-attributes"},"PHP 8 attributes"),(0,i.kt)("p",null,'Starting with PHP 8, PHP got native annotations support. They are actually called "attributes" in the PHP world.'),(0,i.kt)("p",null,"The same code can be written this way:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use TheCodingMachine\\GraphQLite\\Annotations\\Type;\n\n#[Type]\nclass MyType\n{\n}\n")),(0,i.kt)("p",null,"GraphQLite v4.1+ has support for PHP 8 attributes."),(0,i.kt)("p",null,"The Doctrine annotation class and the PHP 8 attribute class is ",(0,i.kt)("strong",{parentName:"p"},"the same")," (so you will be using the same ",(0,i.kt)("inlineCode",{parentName:"p"},"use")," statement at the top of your file)."),(0,i.kt)("p",null,"They support the same attributes too."),(0,i.kt)("p",null,"A few notable differences:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"PHP 8 attributes do not support nested attributes (unlike Doctrine annotations). This means there is no equivalent to the ",(0,i.kt)("inlineCode",{parentName:"li"},"annotations")," attribute of ",(0,i.kt)("inlineCode",{parentName:"li"},"@MagicField")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"@SourceField"),"."),(0,i.kt)("li",{parentName:"ul"},'PHP 8 attributes can be written at the parameter level. Any attribute targeting a "parameter" must be written at the parameter level.')),(0,i.kt)("p",null,"Let's take an example with the ",(0,i.kt)("a",{parentName:"p",href:"/docs/4.2/autowiring"},(0,i.kt)("inlineCode",{parentName:"a"},"#Autowire")," attribute"),":"),(0,i.kt)(o.Z,{defaultValue:"php8",values:[{label:"PHP 8",value:"php8"},{label:"PHP 7",value:"php7"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"php8",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"#[Field]\npublic function getProduct(#[Autowire] ProductRepository $productRepository) : Product {\n    //...\n}\n"))),(0,i.kt)(r.Z,{value:"php7",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},'/**\n * @Field\n * @Autowire(for="$productRepository")\n */\npublic function getProduct(ProductRepository $productRepository) : Product {\n    //...\n}\n')))))}h.isMDXComponent=!0}}]);